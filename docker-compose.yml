version: '3.8'

services:
  # MongoDB Container
  mongodb:
    image: mongo:5.0
    container_name: indianolympicdream-mongodb
    restart: unless-stopped
    environment:
      MONGO_INITDB_ROOT_USERNAME: admin
      MONGO_INITDB_ROOT_PASSWORD: Pi@2025
      MONGO_INITDB_DATABASE: IndianOlympicDream
    ports:
      - "27017:27017"
    volumes:
      - mongodb_data:/data/db
      - ./mongo-init.js:/docker-entrypoint-initdb.d/mongo-init.js:ro
    networks:
      - indianolympicdream-network
    healthcheck:
      test: echo 'db.runCommand("ping").ok' | mongosh localhost:27017/test --quiet
      interval: 30s
      timeout: 10s
      retries: 5
      start_period: 40s

  # Node.js App Container
  app:
    build: 
      context: .
      dockerfile: Dockerfile
    container_name: indianolympicdream-app
    restart: unless-stopped
    environment:
      - NODE_ENV=production
      - MONGO_URI=mongodb://admin:Pi@2025@mongodb:27017/IndianOlympicDream?authSource=admin
      - MONGO_DB_NAME=IndianOlympicDream
      - AUTH_SOURCE=admin
    ports:
      - "3000:3000"
    depends_on:
      mongodb:
        condition: service_healthy
    networks:
      - indianolympicdream-network
    healthcheck:
      test: ["CMD", "wget", "--no-verbose", "--tries=1", "--spider", "http://localhost:3000/api/allsports"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 60s

# Named volume for MongoDB data persistence
volumes:
  mongodb_data:
    driver: local

# Custom network for container communication
networks:
  indianolympicdream-network:
    driver: bridge
    name: indianolympicdream-app
